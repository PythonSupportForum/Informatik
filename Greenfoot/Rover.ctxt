#BlueJ class context
comment0.target=Rover
comment1.params=
comment1.target=void\ act()
comment10.params=
comment10.target=void\ s46Aufg3()
comment11.params=
comment11.target=void\ spirale()
comment12.params=
comment12.target=void\ einmalDrumherum()
comment13.params=
comment13.target=void\ zaehlBeispiel()
comment14.params=
comment14.target=void\ dummikreis()
comment15.params=
comment15.target=void\ zweiFelderFahren()
comment16.params=
comment16.target=void\ haAufgabe9a()
comment17.params=
comment17.target=void\ haAufgabe9b()
comment18.params=
comment18.target=void\ bergketteAbfahren()
comment19.params=
comment19.target=void\ aufgabeEinsAnalysiereVierVorne()
comment2.params=
comment2.target=void\ s65Nr1_a()
comment20.params=
comment20.target=void\ aufgabeZweiF\u00FCnfMalF\u00FCnf()
comment21.params=
comment21.target=void\ aufgabeZweiEndloseRekursion()
comment22.params=
comment22.target=void\ anBergketteEntlang()
comment23.params=
comment23.target=void\ abAufg9a()
comment24.params=
comment24.target=void\ fahre()
comment24.text=\r\n\ Der\ Rover\ bewegt\ sich\ ein\ Feld\ in\ Fahrtrichtung\ weiter.\r\n\ Sollte\ sich\ in\ Fahrtrichtung\ ein\ Objekt\ der\ Klasse\ Huegel\ befinden\ oder\ er\ sich\ an\ der\ Grenze\ der\ Welt\ befinden,\r\n\ dann\ erscheint\ eine\ entsprechende\ Meldung\ auf\ dem\ Display.\r\n
comment25.params=richtung
comment25.target=void\ drehe(java.lang.String)
comment25.text=\r\n\ Der\ Rover\ dreht\ sich\ um\ 90\ Grad\ in\ die\ Richtung,\ die\ mit\ richtung\ (\u201Elinks\u201C\ oder\ \u201Erechts\u201C)\ \u00FCbergeben\ wurde.\r\n\ Sollte\ ein\ anderer\ Text\ (String)\ als\ "rechts"\ oder\ "links"\ \u00FCbergeben\ werden,\ dann\ erscheint\ eine\ entsprechende\ Meldung\ auf\ dem\ Display.\r\n
comment26.params=
comment26.target=boolean\ gesteinVorhanden()
comment26.text=\r\n\ Der\ Rover\ gibt\ durch\ einen\ Wahrheitswert\ (true\ oder\ false\ )zur\u00FCck,\ ob\ sich\ auf\ seiner\ Position\ ein\ Objekt\ der\ Klasse\ Gestein\ befindet.\r\n\ Eine\ entsprechende\ Meldung\ erscheint\ auch\ auf\ dem\ Display.\r\n
comment27.params=richtung
comment27.target=boolean\ huegelVorhanden(java.lang.String)
comment27.text=\r\n\ Der\ Rover\ \u00FCberpr\u00FCft,\ ob\ sich\ in\ richtung\ ("rechts",\ "links",\ oder\ "vorne")\ ein\ Objekt\ der\ Klasse\ Huegel\ befindet.\r\n\ Das\ Ergebnis\ wird\ auf\ dem\ Display\ angezeigt.\r\n\ Sollte\ ein\ anderer\ Text\ (String)\ als\ "rechts",\ "links"\ oder\ "vorne"\ \u00FCbergeben\ werden,\ dann\ erscheint\ eine\ entsprechende\ Meldung\ auf\ dem\ Display.\r\n
comment28.params=
comment28.target=void\ analysiereGestein()
comment28.text=\r\n\ Der\ Rover\ ermittelt\ den\ Wassergehalt\ des\ Gesteins\ auf\ seiner\ Position\ und\ gibt\ diesen\ auf\ dem\ Display\ aus.\r\n\ Sollte\ kein\ Objekt\ der\ Klasse\ Gestein\ vorhanden\ sein,\ dann\ erscheint\ eine\ entsprechende\ Meldung\ auf\ dem\ Display.\r\n
comment29.params=
comment29.target=void\ setzeMarke()
comment29.text=\r\n\ Der\ Rover\ erzeugt\ ein\ Objekt\ der\ Klasse\ \u201EMarkierung\u201C\ auf\ seiner\ Position.\r\n
comment3.params=
comment3.target=void\ s65Nr1_b()
comment30.params=
comment30.target=boolean\ markeVorhanden()
comment30.text=\r\n\ *Der\ Rover\ gibt\ durch\ einen\ Wahrheitswert\ (true\ oder\ false\ )zur\u00FCck,\ ob\ sich\ auf\ seiner\ Position\ ein\ Objekt\ der\ Marke\ befindet.\r\n\ Eine\ entsprechende\ Meldung\ erscheint\ auch\ auf\ dem\ Display.\r\n
comment31.params=
comment31.target=void\ entferneMarke()
comment32.params=pText
comment32.target=void\ nachricht(java.lang.String)
comment33.params=
comment33.target=void\ displayAusschalten()
comment34.params=world
comment34.target=void\ addedToWorld(greenfoot.World)
comment4.params=
comment4.target=void\ s65Nr1_c()
comment5.params=n\ x\ y
comment5.target=void\ n_mal_nach_x_drehen_und_y_mal_fahren(int,\ java.lang.String,\ int)
comment6.params=
comment6.target=void\ s65Nr2()
comment7.params=
comment7.target=void\ s41_nr_1()
comment8.params=
comment8.target=void\ s41_nr_1_b()
comment9.params=
comment9.target=void\ s41_nr_2()
numComments=35
