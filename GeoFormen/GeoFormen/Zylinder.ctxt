#BlueJ class context
comment0.target=Zylinder
comment0.text=\r\n\ Die\ Klasse\ Zylinder\ soll\ bei\ diesem\ Projekt\ zur\ Generierung\ neuer\ Objekte\ des\ Zylinder-Typs\ verwendet\ werden\ k\u00F6nnen.\ Die\ Klasse\ besitzt\ verschiedene\ Attribute,\ die\ die\ einzelnen\ Objekte\ dieser\ Klasse\ characteriesieren.\ Im\ Kontekt\ des\ Projektes\ \:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\ soll\ die\ Klasse\ zur\ Erzeugung\ einzelner\ \:\:\:\:\:\:\:\ dienen.\ Diese\ Generierten\ Objekte\ k\u00F6nnen\ dann\ \:\:\:\:\:\:\:\:\:.\ Das\ Repr\u00E4sentiert\ im\ Kontekt\ des\ Projektes\ \:\:\:\:\:\:\:.\ Ein\ Objekt\ dieser\ Klasse\ kann\ \u00FCber\ den\ einen\ Konstruktor\ generiert\ werden.\ \u00DCbergeben\ werden\ m\u00FCssen\ die\ Parameter\ double\ pHoehe,\ die\ f\u00FCr\ die\ Gleichnamigen\ Attribute\ stehen.\ Die\ Werte\ der\ Attribute\ werden\ bei\ Erzeugung\ eines\ Objektes\ automatisch\ auf\ die\ der\ \u00FCbergebenen\ Parameter\ gesetzt.\ \r\n\ Die\ Klasse\ Kreis\ wird\ von\ der\ Klasse\ Zylinder\ geerbt.\ Das\ hei\u00DFt,\ dass\ alle\ nicht\ als\ 'private'\ deklarierten\ Attribute\ und\ Methoden\ der\ Klasse\ Kreis\ vererbt\ werden\ und\ bei\ Objekten\ der\ Aktuellen\ Klasse\ ebenfals\ als\ Eigenschaften\ hinzugef\u00FCgt\ werden.\ Das\ bietet\ den\ Vorteil,\ dass\ diese\ Attribute\ und\ Methoden\ nicht\ erneut\ geschreiben\ werden\ m\u00FCssen,\ sondern\ weiterverwendet\ werden\ k\u00F6nnen.\r\n
comment1.params=radius\ pHoehe
comment1.target=Zylinder(double,\ double)
comment1.text=\r\n\ Erzeugt\ ein\ neues\ Objekt\ vom\ Typ\ der\ Klasse\ Zylinder\ und\ gibt\ dieses\ zur\u00FCck.\ Als\ Parameter\ muss\ double\ pHoehe\ \u00FCbergeben\ werden.\ Die\ \u00DCbergebenen\ Parameter\ werden\ automatisch\ in\ dem\ entsprechenden\ Attribut\ des\ neuen\ Objektes\ gespeichert.\r\n
comment2.params=pHoehe
comment2.target=void\ setHoehe(double)
comment2.text=\r\n\ Setzt\ das\ Attribut\ Hoehe\ eines\ Objektes\ der\ Klasse\ Zylinder\ auf\ den\ mit\ dem\ Parameter\ pHoehe\ \u00FCbergebenen\ Wert.\r\n
comment3.params=
comment3.target=double\ getHoehe()
comment3.text=\r\n\ Ist\ die\ Getter\ Methode\ f\u00FCr\ das\ Attribute\ Hoehe.\ So\ kann\ der\ Wert\ von\ dem\ Attribut\ Hoehe\ der\ Klasse\ Zylinder\ ausgelesen\ und\ woanders\ verwendet\ werden.\ \r\n
comment4.params=
comment4.target=double\ Volumen()
comment4.text=\r\n\ Die\ Methode\ Volumen\ der\ Klasse\ Zylinder\ gibt\ einen\ Wert\ vom\ Typ\ double\ zur\u00FCck.\ \r\n
comment5.params=
comment5.target=double\ Mantelflaeche()
comment5.text=\r\n\ Die\ Methode\ Oberflaeche\ der\ Klasse\ Zylinder\ gibt\ einen\ Wert\ vom\ Typ\ double\ zur\u00FCck.\ \r\n
comment6.params=
comment6.target=double\ Oberflaeche()
numComments=7
